"""Categories

Revision ID: df6ab4354602
Revises: 
Create Date: 2024-09-07 09:06:33.532766

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'df6ab4354602'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

# Enum definition for version_type
version_type_enum = sa.Enum('NEW', 'AMENDMENT', name='versiontype')

def upgrade() -> None:
    # Create the enum type before using it
    version_type_enum.create(op.get_bind(), checkfirst=True)

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_categories_id'), 'categories', ['id'], unique=False)
    op.create_index(op.f('ix_categories_name'), 'categories', ['name'], unique=True)
    
    op.create_table('document_category_association',
        sa.Column('document_id', sa.Integer(), nullable=True),
        sa.Column('category_id', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(['category_id'], ['categories.id'], onupdate='CASCADE', ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['document_id'], ['document.id'], onupdate='CASCADE', ondelete='CASCADE')
    )
    
    op.add_column('document', sa.Column('version_type', sa.Enum('NEW', 'AMENDMENT', name='versiontype'), nullable=False))
    op.add_column('document', sa.Column('previous_document_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'document', 'document', ['previous_document_id'], ['id'])

    # Ensure existing rows have the 'NEW' version type
    op.execute("UPDATE document SET version_type = 'NEW' WHERE version_type IS NULL")

    # Set server default to None
    op.alter_column('document', 'version_type', server_default=None)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'document', type_='foreignkey')
    op.drop_column('document', 'previous_document_id')
    op.drop_column('document', 'version_type')
    
    op.drop_table('document_category_association')
    op.drop_index(op.f('ix_categories_name'), table_name='categories')
    op.drop_index(op.f('ix_categories_id'), table_name='categories')
    op.drop_table('categories')

    # Drop the enum type after all references are removed
    version_type_enum.drop(op.get_bind(), checkfirst=True)
    # ### end Alembic commands ###
